---
title: "Importation des données"
title-block-banner: true
description: | 
  Explication de la démarche d'importation.
# à changer
date: "`r format(Sys.time(), '%d %B, %Y')`"
# Modifier les détails que vous voulez
author:
  - name: "James Roy"
    # Votre site web perso ou github
    url: https://github.com/JJamesRoy
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0002-0941-5961

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: false
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

## Quelles sont les bases de données utilisées dans ce travail ?

Ce travail utilise les données de [Gapminder](https://www.gapminder.org/) et de [Our World in Data](https://ourworldindata.org/) (en particulier [CO₂ and Greenhouse Gas Emissions](https://github.com/owid/co2-data) et [Energy](https://ourworldindata.org/energy)).

## Importation des données

À l'aide d'un script qui utilise les *library* fs de @fs, lubridate de @lubri ainsi que googlesheets4 de @gs4 , les données sont importées directement à partir de lien internet.

Les données de Our World in Data sont mises à jour quotidiennement tandis que celles de Gapminder sont mis à jour mensuellement.

## Nettoyage des données

Il faut nettoyer les données poour ajuster les types de variables soient les bonnes. Par exemple, les dates doivent être de type *date*, les chiffres de type *integer,* etc*.* De plus, il faut ajouter les continents aux datasets ainsi que de les renommer.

```{r, warning = FALSE, message=FALSE, include = FALSE}
library(fs)
library(tidyverse)
library(countrycode)
```

```{r import, message = FALSE, warning=FALSE, include = FALSE}
source("R/helper.R")

base_path = path("data","raw")

files = list.files(base_path)

files_name = path(base_path, files)

df = lapply(files_name, read.csv)

dat_co2 = df[[1]]
dat_energy = df[[2]]
dat_life = df[[3]]
```

```{r co2, warning = FALSE, include = FALSE}
dat_co2 = dat_co2 %>% drop_na(co2) %>% 
    mutate(continent = countrycode(iso_code, 'iso3c', 'continent')) %>%
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))

dat_co2$year = ymd(dat_co2$year, truncated = 2L)
```

```{r energy, warning = FALSE, include = FALSE}
dat_energy = dat_energy %>% drop_na(energy_per_capita) %>% 
    mutate(continent = countrycode(iso_code, 'iso3c', 'continent')) %>% 
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))

dat_energy$year = ymd(dat_energy$year, truncated = 2L)
```

```{r life, warning = FALSE, include = FALSE}
dat_life = dat_life %>% select(-X) %>% 
    mutate(continent = countrycode(geo, 'iso3c', 'continent')) %>% 
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))

dat_life$time = ymd(dat_life$time, truncated = 2L)
```

```{r, message = FALSE, include = FALSE}
base_write = path("data","cache")

files_remove = list.files(base_write)

files_remove = path(base_write, files_remove)

file.remove(files_remove)

myList <- list(dat_co2 = dat_co2, 
               dat_energy = dat_energy,
               dat_life = dat_life)

mapply(write.csv, myList, file=paste0(base_write,"/",names(myList), '.csv'))
```

## Téléchargement des données

L'ensemble des données traitées et non-traitées est disponible sur cette [page.](data.qmd)

## Suite

Les analyses et explorations des données se trouvent sur cette [page.](exploration.qmd)
