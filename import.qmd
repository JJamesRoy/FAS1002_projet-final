---
title: "Importation des données"
title-block-banner: true
description: | 
  Explication de la démarche d'importation.
# à changer
date: "`r format(Sys.time(), '%d %B, %Y')`"
# Modifier les détails que vous voulez
author:
  - name: "James Roy"
    # Votre site web perso ou github
    url: https://github.com/JJamesRoy
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0002-0941-5961

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: true
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

## Quelles sont les bases de données utilisées dans ce travail ?

Ce travail utilise les données de [Gapminder](https://www.gapminder.org/) et de [Our World in Data](https://ourworldindata.org/) (en particulier [CO₂ and Greenhouse Gas Emissions](https://github.com/owid/co2-data) et [Energy](https://ourworldindata.org/energy)).

## Importation des données

À l'aide d'un script qui utilise les *library* fs de @fs, lubridate de @lubri, googlesheets4 de @gs4 ainsi que taskscheduleR de @task, les données sont importées directement à partir de lien internet.

Les données de Our World in Data sont mises à jour quotidiennement tandis que celles de Gapminder sont mis à jour mensuellement.

## Nettoyage des données

```{r, warning = FALSE, message=FALSE}
library(fs)
library(tidyverse)
library(countrycode)
```

```{r import}
base_path = path("data","raw")

files = list.files(base_path)

files_name = path(base_path, files)

df = lapply(files_name, read.csv)

dat_co2 = df[[1]]
dat_energy = df[[2]]
dat_life = df[[3]]
```

```{r co2}
dat_co2 = dat_co2 %>% drop_na(co2) %>% 
    mutate(continent = countrycode(iso_code, 'iso3c', 'continent')) %>%
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))
```

```{r energy}
dat_energy = dat_energy %>% drop_na(energy_per_capita) %>% 
    mutate(continent = countrycode(iso_code, 'iso3c', 'continent')) %>% 
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))
```

```{r life}
dat_life = dat_life %>% select(-X) %>% 
    mutate(continent = countrycode(geo, 'iso3c', 'continent')) %>% 
    mutate(continent = recode(continent, `Africa` = "Afrique", `Americas` = "Amériques", `Asia` = "Asie", `Oceania` = "Océanie"))
```

```{r, message = FALSE}
base_write = path("data","cache")


myList <- list(dat_co2 = dat_co2, 
               dat_energy = dat_energy,
               dat_life = dat_life)

mapply(write.csv, myList, file=paste0(base_write,"/",names(myList), '.csv'))
```

## Téléchargement des données

L'ensemble des données traitées et non-traitées est disponible sur cette [page.](data.qmd)

Reimport.

Créer un script dans le dossier R

ggtable

Il est maintenant le temps de décrire votre projet avant de passer au document suivant, soit l'importation et la manipulation des données.

Je vous conseille d'écrire cette partie en dernier, une fois que vous aurez déjà vos résultats et figures afin d'éviter de réécrire cette page plusieurs fois.

::: callout-important
N'oubliez pas d'inclure vos références sur chacune des pages!
:::

Par exemple:

> Les données proviennent entre autres de @owidenergy.
