---
title: "Exploration et analyse des données"
title-block-banner: false
description: | 
  L'exploration et l'analyse des données se feront dans cette partie.
# à changer
date: "`r format(Sys.time(), '%d %B, %Y')`"
# Modifier les détails que vous voulez
author:
  - name: "James Roy"
    # Votre site web perso ou github
    url: https://github.com/JJamesRoy
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0002-0941-5961

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: false
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

## Exploration sommaire des données

```{r message = FALSE, warning = FALSE}
library(tidyverse)
library(skimr)
library(modelsummary)
library(fs)
library(stringr)
library(lubridate)
```

```{r import}
base_cache = path("data","cache")

files = list.files(base_cache)

files_name = path(base_cache, files)

df = lapply(files_name, read.csv)

dat_co2 = df[[1]]
dat_energy = df[[2]]
dat_life = df[[3]]
```

::: callout-note
## Présentation données

J'ai choisi de seulement présenter les données regroupées par continent (alors que dans les consignes on doit les présenter groupées et non-groupées). En effet, il n'y a qu'un seu argument qui change, mais ça ajoute beaucoup trop de contenu pour rien.

J'ai mis un commentaire dans le bloc de code ci-dessous pour montrer comment je ferais.
:::

### Données sur le CO2

```{r}
skim(dat_co2)
```

La base de donnée OWiD sur le CO2 ([@owidco2andothergreenhousegasemissions]) est composée de 31 349 observations et de 74 variables. La plupart des variables sont numériques (sauf le nom des pays et son code ISO). Les autres variables ne concernent pas seulement le CO2, mais aussi le méthane, le protoxyde d'azote ou encore le PIB.

```{r, warning = FALSE}
dat_co2_summary = dat_co2 %>% 
    filter(year >= 1990) %>% 
    select(c(co2, co2_per_capita, co2_per_gdp, energy_per_capita, continent)) %>%
    drop_na() %>% 
    rename(`Émission de CO2` = co2,
           `Émission de CO2/hab.` = co2_per_capita,
           `Émission de CO2/$PIB` = co2_per_gdp,
           `Conso. d'énergie en kW/h par hab.` = energy_per_capita)

datasummary(All(dat_co2_summary) ~ continent*((Moyenne = Mean) + (`Écart-type` = SD) + Min + Max + (Histogramme = Histogram)), data = dat_co2_summary)

# Si je veux que ça ne soit pas grouper... :
# datasummary(All(dat_co2_summary) ~ (Moyenne = Mean) + (`Écart-type` = SD) + Min + Max + (Histogramme = Histogram), data = dat_co2_summary)
```

### Données sur l'énergie

```{r}
skim(dat_energy)
```

La base de données sur l'énergie ([@owidenergy]) contient 10 215 observations pour un total de 128 variables. Pareillement à celle précédente, elle ne contient que 2 variables de type *character*, les autres sont des variables numériques. La base est très complète, elle contient des informations sur une panoplie de forme d'énergie.

```{r, warning = FALSE}
dat_energy_summary = dat_energy %>% 
    filter(year >= 1990) %>% 
    select(c(renewables_elec_per_capita, renewables_share_elec, per_capita_electricity, continent)) %>%
    drop_na() %>% 
    rename(`Génération d'électr. renouvelable per hab. en kW/h` = renewables_elec_per_capita,
           `Pourcentage d'énergie renouvelable` = renewables_share_elec,
           `Génération d'électricité totale par hab. en kW/h` = per_capita_electricity)

datasummary(All(dat_energy_summary) ~ continent*((Moyenne = Mean) + (`Écart-type` = SD) + Min + Max + (Histogramme = Histogram)), data = dat_energy_summary)
```

### Données sur l'espérance de vie

```{r}
skim(dat_life)
```

Concernant la base de données de Gapminder ([@lifeexp]) sur l'espérance de vie, celle-ci contient 56 616 observations et 4 variables. Elle est assez sobre, elle ne contient que l'année, le nom du pays, son code et son espérance de vie.

```{r, warning = FALSE}
dat_life_summary = dat_life %>% 
    select(-c(X, geo, name, time)) %>%
    drop_na() %>% 
    rename(`Espérance de vie` = Life.expectancy,)

datasummary(All(dat_life_summary) ~ continent*((Moyenne = Mean) + (`Écart-type` = SD) + Min + Max + (Histogramme = Histogram)), data = dat_life_summary)
```

#### Nombre de jours variables d'intérêt

Comme demandé dans les consignes, on doit calculer le nombre de jours entre la production et la première année des données

```{r}
dat_life_day = dat_life %>% select(time, name) %>% arrange(time) %>% distinct(name, .keep_all = TRUE)

dat_life_day = dat_life_day %>% mutate(jour = parse_number(as.character(difftime(today(), dat_life_day$time, units = "days"))))

head(dat_life_day[2:3], n = 20)
```

On voit que le nombre jours écoulés est pareil pour presque l'ensemble des pays (sauf 9 pays).

## Analyse de données

### Consolidation des données

Afin de faciliter l'analyse de données, il est préférable de rassembler l'ensemble des base de données en une.

```{r}
col_co2 = colnames(dat_co2)

col_energy = colnames(dat_energy)

inter_col = intersect(col_co2, col_energy)

inter_col = inter_col[-c(2,3)]

dat_energy_md = dat_energy %>% select(-c(all_of(inter_col)))

dat_full = inner_join(dat_co2, dat_energy_md, by = c("country", "year"), keep = FALSE)

dat_life_md = dat_life %>% rename(year = time,
                                  country = name) %>% 
    select(c(year, country, Life.expectancy))

dat_full = inner_join(dat_full, dat_life_md, by = c("country", "year"), keep = FALSE)

dat_full = dat_full %>% 
    mutate(gdp_per_capita = gdp/population)

base_write = path("data","processed")

files_remove = list.files(base_write)

files_remove = path(base_write, files_remove)

file.remove(files_remove)

dat_name = path(base_write, "dat_full")

write.csv(dat_full, file = paste0(dat_name, ".csv"))
```

### Analyse #1

```{r}
mod1 = lm(co2 ~ gdp + population + Life.expectancy, data = dat_full, na.action=na.exclude)

summary(mod1)

```

Comme il est possible de le voir dans le résumé de la régression ci-haut. L'effet du PIB du pays sur l'émission de celui-ci est significatif (P-value proche de 0). En effet, en contrôlant pour la population et l'espérance de vie, on voit qu'en moyenne et dans nos données, un 1\$ de PIB en plus augmente les émissions de CO2 de 0,0004392 gramme. Plus simplement, 1 M\$ de PIB en plus augmente les émissions de 0,4392 kg. Or, malgré la relation significative, il est difficile d'établir une relation causale. Il faudrait s'intéresser plus profondément au sujet.

```{mermaid}
flowchart LR
  A[GDP] --> B(CO2)
  C[Population] --> B
  D[Life Expectancy] --> C
  D & C --> A
```

Avec une analyse basée sur les graphes orientés acycliques (GOA ou en anglais *DAG),* on voit que la régression représente un effet causale, or il manque beaucoup de variables (qui ne sont pas disponibles dans le *dataset*) pour être proche d'une relation causale. Par exemple, la part d'industrie lourde ou de production d'énergie fossile seraient des variables qui amélioraient le modèle (car elles affectent le PIB et l'émission de CO2)

### Analyse #2

```{r}
dat_mod2 = dat_full %>% filter(year >= 1990)
mod2 = lm(renewables_share_elec ~ log(gdp_per_capita), data = dat_full, na.action=na.exclude)
summary(mod2)
```

Dans cette deuxième analyse, je tente d'observer le lien entre le PIB par habitant et la part d'énergie renouvelable dans le mix énergétique du pays. Selon la régression ci-haut, le PIB/hab semble avoir un effet significatif et négatif sur le part d'énergie renouvelable. En effet, une hausse de 1% du PIB par habitant diminue la part des énergies renouvelables de 6,95% en moyenne.

```{mermaid}
flowchart LR
  A[PIB par habitant] --> B(Part d'électricité renouvelable)
```

Encore une fois, avec une analyse basée sur les graphes orientés acycliques (GOA ou en anglais *DAG),* on voit que la régression représente presque un effet causale. En revanche pour améliorer le modèle, il faudrait ajouter des variables comme l'investissement ou encore les subventions gouvernementales sur les énergies propres (ces variables affectent X et Y donc on doit les contrôler pour que le $\beta$ ne soit pas biaisé).

### Rappel :

L'ensemble des données traitées et non-traitées est disponible sur cette [page.](data.qmd)

## Suite

Pour continuer l'analyse, il suffit de se rendre sur cette [page.](visu.qmd)
