---
title: "Visualisation des données"
title-block-banner: false
description: | 
  Plusieurs visualisations sont disponibles ici.
# à changer
date: "`r format(Sys.time(), '%d %B, %Y')`"
# Modifier les détails que vous voulez
author:
  - name: "James Roy"
    # Votre site web perso ou github
    url: https://github.com/JJamesRoy
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0002-0941-5961

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: false
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

```{r, warning = FALSE, message = FALSE, include = FALSE}
library(tidyverse)
library(leaflet)
library(gganimate)
library(fs)
library(rgdal)
library(rmapshaper)
library(sp)
library(tools)
library(RColorBrewer)
library(classInt)
library(countrycode)
library(showtext)
library(htmlwidgets)
```

```{r, include = FALSE, message=FALSE}
path = path("data", "processed")

file_full = path(path, list.files(path))

dat_full = read.csv(file_full)
```

```{r, warning = FALSE, message = FALSE, include = FALSE}
path_fig = path("R","figure.R")
source(path_fig)
# Supprimer les anciens graphiques, fait appel à un script
```

## Visualisation

Dans cette partie, les données seront visualisées pour mieux les analyser. Tous les graphiques sont disponibles au téléchargement. Voici cette partie : [Rappel] pour le téléchargement.

## Importation données manquantes

Il faut télécharger les données satellites de la Terre pour pouvoir créer un graphique de type chloroplèthe. Cela consiste de variables qui forment des polygones qui représentent les différents pays.

```{r, message = FALSE, cache=TRUE, include = FALSE}
URL = "https://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip"

path_map_zip = path("data", "map", "map")

path_map = path("data", "map")

map_name = paste0(path_map_zip, ".zip")

download.file(URL, destfile = map_name)

# Télécharge les données pour la map

unzip(map_name, exdir = path_map)

map_files = list.files(path_map)

file.remove(path(path_map, map_files[c(1,2)]))

```

```{r, warning = FALSE, message=FALSE, include = FALSE}
path_map_read = path("data", "map")

layer = file_path_sans_ext(list.files(path_map_read))

map = readOGR(dsn = path_map_read,
                   layer = layer[1])

# Load la map

######
dat_full = dat_full %>% mutate(year = lubridate::year(year))

dat_map = dat_full %>% select(c("country", "co2_per_gdp", "year")) %>%  pivot_wider(names_from = year, values_from = co2_per_gdp)

na_table = dat_map %>% summarise_all(funs(sum(is.na(.)))) 

#Trouver la colonne avec le moins de NA pour avoir la meilleure année

######

dat_map = dat_map %>% pivot_longer(!country, names_to = "year", values_to = "co2_per_gdp") %>% filter(year == 2018) %>% mutate(iso = countrycode(country, "country.name", "iso3c"))

map@data = right_join(dat_map, map@data,
                            by = c("iso" = "ISO3"))

# Merge les données dans le dataset avec la map
```

```{r, message = FALSE, include = FALSE}
font_add_google("Roboto Mono", "Roboto")
showtext_auto()

# Load la font pour les graph

colors = c("#d8dcff", "#aeadf0", "#c38d94", "#a76571", "#565676")

# Code couleur

figure = path("figures")
```

## Graphique 1

Dans ce premier graphique, il est possible d'observer la répartition des émissions de CO2 par \$ de PIB. Cela est utile pour analyser l'intensité des économies au niveau des émissions. Logiquement, il devrait y avoir deux effets contraires :

1.  Effet #1 : Les pays riches ont des industries plus développées technologiquement et une économie tertiaire plus développée que les autres pays. Donc la corrélation devrait être négative.

2.  Effet #2 : Les pays riches ont plus tendances à surconsommer, à utiliser des moyens de transport plus polluants et à avoir un quotidient plus intensif au niveau énergétique. Donc la corrélation devrait positive.

```{r, warning = FALSE, message = FALSE, echo = FALSE}
breaks_qt <- classIntervals(map$co2_per_gdp, n = 9, style = "quantile")
  #Break the variable into quantiles

pal_fun <- colorQuantile("YlOrRd", NULL, n = 9)
  #Create a function for the color palette
p_popup <- paste0("<strong>Émission de CO2 par $ de PIB : </strong>", map$co2_per_gdp)



p = leaflet() %>%
  addPolygons(data = map,
    stroke = TRUE, color = "black", opacity = 0.2, weight = 1.5,
    fillColor = ~pal_fun(co2_per_gdp),
    fillOpacity = 0.75, smoothFactor = 0.5,
    highlightOptions = highlightOptions(color = "white", weight = 2,
                                        bringToFront = TRUE),
    popup = p_popup) %>%
  addTiles() %>%
  addLegend("bottomright", 
            colors = brewer.pal(9, "YlOrRd"), 
            labels = paste0("up to ", format(breaks_qt$brks[-1], digits = 2)),
            title =  'Émission de CO2 par $ de PIB selon les pays')

p

saveWidget(p, file = paste0(paste(path(figure, "map"), today(), sep = "_"), ".html"))
# Save map en html

```

::: callout-note
Gros problème dans ce graphique. Certains pays se lient pas alors qu'ils ont le même code ISO3C. Je n'ai pas trouvé la cause ni de fix donc je vais laisser ça comme ça...
:::

En somme, sans analyse statistique approfondie, il est difficile d'établir le sens de la corrélation. En effet, elle semble mitigiée.

## Graphique 2

Comme deuxième graphique, la moyenne pondérée du CO2 par habitant par continent est représentée au fil des ans. Deux éléments intéressants ressortent du graphique. D'abord, on voit un rattrapage progressif de l'Asie, qui est sans doute du à la croissance économique de ces pays. De l'autre côté, l'Europe et l'Amérique améliorent leurs efficacités énergétiques de façon remarquable à partir de 1980-85.

```{r, message = FALSE, warning = FALSE, echo = FALSE}
dat_p1 = dat_full %>% 
    group_by(continent, year) %>% 
    mutate(mean = weighted.mean(co2_per_capita, population))

p1 = ggplot(dat_p1, aes(year, mean, color = factor(continent))) +
    geom_line() +
    transition_reveal(year) +
    scale_color_manual(values = colors, name = "Continent") +
    labs(title = "Moyenne du CO2 par habitant\npar continent au fil des années",
         x = "Année",
         y = "CO2 par habitant") +
    theme_minimal() +
    theme(text = element_text(family = "Roboto"),
          plot.title = element_text(hjust = 0.5, vjust = 5),
          axis.title.y = element_text(vjust = 7),
          plot.margin = margin(20,20,20,20, unit = "pt"))
    
animate(p1,
        end_pause = 10,
        renderer = gifski_renderer(paste0(paste(path(figure, "p1"), today(), sep = "_"), ".gif")))
```

## Graphique 3

Ensuite, le troisième graphique représente la distribution de la part d'électricité de source renouvelable dans chaque continent (moyenne pondérée par la population). Logiquement, on voit une progression quasi constante pour chacun des continents.

```{r, warning = FALSE, echo=FALSE, message = FALSE}
dat_p2 = dat_full %>% 
    group_by(continent, year) %>% 
    summarise(mean = 0.01*weighted.mean(renewables_share_elec, population, na.rm = TRUE))

p2 = ggplot(dat_p2, aes(continent, mean, fill = as.factor(continent))) +
    geom_col() +
    transition_time(year) +
    labs(subtitle = "Year: {as.integer(frame_time)}",
         y = "Part",
         x = "Continent",
         title = "Distribution de la part d'électricité\nrenouvelable par continent ") +
    scale_fill_manual(values = colors) +
    scale_y_continuous(label = scales::percent) +
    ease_aes("linear", interval = 0.1) +
    theme_minimal() +
    guides(fill="none") +
    theme(text = element_text(family = "Roboto"),
          plot.title = element_text(hjust = 0.5),
          plot.margin = margin(10,10,10,20, unit = "pt"),
          axis.title.y = element_text(vjust = 7))
# Saut biz de l'afrique en 2000
animate(p2,
        end_pause = 10,
        start_pause = 10,
        renderer = gifski_renderer(paste0(paste(path(figure, "p2"), today(), sep = "_"), ".gif")))
```

## Graphique 4

Le quatrième graphique représente simplement l'évolution de l'espérance de vie par continent au fil des années. Il est possible de remarquer divers événements historiques dans les points (par exemple : dislocation de l'URSS ou encore le génocide des Tutsis au Rwanda).

```{r, warning = FALSE, message = FALSE, echo = FALSE}
dat_p3 = dat_full %>% drop_na(Life.expectancy) %>% filter(year >= 1980 & year <2020) %>% group_by(continent, year) %>% mutate(mean = weighted.mean(Life.expectancy, population))

p3 = ggplot(dat_p3, aes(year, mean, color = as.factor(continent))) +
    geom_point(alpha = 0.9) +
    labs(title = "Distribution de l'espérance de vie par continent selon les années",
         y = "Espérance de vie en années",
         x = "Année") +
    scale_color_manual(values = colors, name = "Continent") +
    theme_minimal() +
    theme(text = element_text(family = "Roboto"),
          plot.title = element_text(hjust = 0.5),
          plot.margin = margin(10,10,10,20, unit = "pt"),
          axis.title.y = element_text(vjust = 7))

p3

ggsave(filename = paste0(paste(path(figure, "p3"), today(), sep = "_"), ".png"), width = 5, height = 5, plot = p3)
```

## Graphique 5

En dernier, l'espérance de vie et le PIB par habitant (échelle log) sont représentés par continent au fil des années. On voit une corrélation assez forte ainsi qu'une croissante constante.

```{r, warning = FALSE, message = FALSE, echo = FALSE}
p4 = ggplot(dat_full, aes(gdp_per_capita, Life.expectancy, size = population, color = continent)) +
    geom_point() +
    scale_x_continuous(trans = "log10", labels = scales::dollar_format()) +
    scale_color_manual(values = c("#011627", "#0027ff", "#2ec4b6", "#e71d36", "#ff9f1c"), name = "Continent") +
    guides(size = "none") +
    labs(x = "PIB par habitant", 
         y = "Espérance de vie",
         title = "Espérance de vie\nselon le PIB par habitant",
         subtitle = "Année: {as.integer(frame_time)}") +
    transition_time(year) +
    shadow_mark(alpha = 0.3, size = 0.5) +
    ease_aes("linear") +
    theme_minimal() +
    theme(text = element_text(family = "Roboto"),
          plot.title = element_text(hjust = 0.5),
          plot.margin = margin(20,20,20,20, unit = "pt"),
          axis.title.y = element_text(vjust = 7))

animate(p4,
        end_pause = 10,
        start_pause = 10,
        renderer = gifski_renderer(paste0(paste(path(figure, "p4"), today(), sep = "_"), ".gif")))
```

## Rappel

L'ensemble des données traitées et non-traitées ainsi que les graphiques sont disponibles sur cette [page.](data.qmd)

```{r, message = FALSE, warning = FALSE, include = FALSE}
#Mettre les graphiques en zip
bulk = path("data", "bulk_plot")

if (!file.exists(paste0(bulk, ".zip"))){
  print("Fichier non-existant")
} else {
  file.remove(paste0(bulk, ".zip"))
}

files2zip <- dir(path("figures"), full.names = TRUE)
zip(zipfile = bulk, files = files2zip)
```
